import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as a,e as s}from"./app-e40ca68e.js";const t={},o=s(`<p>This plugin can automatically handle redirects for your site.</p><h2 id="control-page-redirection" tabindex="-1"><a class="header-anchor" href="#control-page-redirection" aria-hidden="true">#</a> Control Page Redirection</h2><p>If you change the address of an existing page, you can use the <code>redirectFrom</code> option in Frontmatter to redirect to the address of this page, which ensures that users are redirected to the new address when they visit the old link.</p><p>If you need to redirect an existing page to a new page, you can use the <code>redirectTo</code> option in Frontmatter to set the address to redirect to. This way the page will redirect to the new address when accessed.</p><h2 id="redirect-to-pages" tabindex="-1"><a class="header-anchor" href="#redirect-to-pages" aria-hidden="true">#</a> Redirect to Pages</h2><p>You can set a redirect map by setting <code>config</code> in plugin options. You can pass in an object where each key-value pair is a map of redirects.</p><p>For each redirect map, the key is the source link of the redirect, and the value is the destination link of the redirect. The key must be an absolute path, and the value can be an absolute path or a full path.</p><p>When you pass <code>hostname</code> in the plugin options, all redirects in absolute path form will be converted to a full path by prepending <code>hostname</code> and <code>base</code>.</p><div class="hint-container tip"><p class="hint-container-title">Example</p><p>When you invoke the plugin with the following options and <code>base</code> is <code>/</code>:</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">hostname</span><span class="token operator">:</span> <span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">config</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;/foo.html&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/bar.html&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;/baz.html&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://example.com/qux.html&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>The plugin will redirect <code>/foo.html</code> to <code>https://example.com/bar.html</code> and <code>/baz.html</code> to <code>https://example.com/qux.html</code>.</p><p>And when you don&#39;t set <code>hostname</code> above, the plugin will redirect <code>/foo.html</code> to <code>/bar.html</code> and <code>/baz.html</code> to <code>https://example.com/qux.html</code>.</p></div><p>The <code>config</code> option also accepts a function whose argument is <code>App</code>, the return value of which will be parsed as a redirect map. This means you can fully customize redirects by passing a custom function.</p><div class="hint-container tip"><p class="hint-container-title">Example</p><p>Suppose we already have some articles under the <code>post</code> directory, and in an update, we rename <code>post</code> to <code>posts</code>, then we can define a redirect map like this:</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">hostname</span><span class="token operator">:</span> <span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">,</span>
  <span class="token function-variable function">config</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">app</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    Object<span class="token punctuation">.</span><span class="token function">fromEntries</span><span class="token punctuation">(</span>
      app<span class="token punctuation">.</span>pages
        <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> path <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> path<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;/posts/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> path <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>path<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\/posts\\/</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&quot;/post/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> path<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div></div><h2 id="redirecting-locales" tabindex="-1"><a class="header-anchor" href="#redirecting-locales" aria-hidden="true">#</a> Redirecting Locales</h2><p>The plugin can automatically handle multilingual redirection for site.</p><h3 id="auto-locales" tabindex="-1"><a class="header-anchor" href="#auto-locales" aria-hidden="true">#</a> Auto Locales</h3><p>The plugin can automatically redirect non-multilingual links to the multilingual pages the user needs based on the user&#39;s language preference.</p><p>To achieve this, you need to leave the default language directory (<code>/</code>) blank and set <code>autoLocale: true</code> in plugin options. The plugin will automatically redirect to the correct page according to the user&#39;s language.</p><p>I.E.: you need to set the following directory structure:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>.
├── en
│   ├── ...
│   ├── page.md
│   └── README.md
├── zh
│   ├── ...
│   ├── page.md
│   └── README.md
└── other_languages
    ├── ...
    ├── page.md
    └── README.md
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>And set <code>locales</code> in theme options with:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">locales</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;/en/&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">lang</span><span class="token operator">:</span> <span class="token string">&quot;en-US&quot;</span><span class="token punctuation">,</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;/zh/&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">lang</span><span class="token operator">:</span> <span class="token string">&quot;zh-CN&quot;</span><span class="token punctuation">,</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// other languages</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>So when a user accesses <code>/</code> or <code>/page.html</code>, they are automatically redirected to <code>/en/</code> <code>/en/page.html</code> and <code>/en/</code> <code>/en/page.html</code> based on current browser language.</p><div class="hint-container info"><p class="hint-container-title">Customizing fallback behavior</p><p>Sometimes, users may add more than one language to the system settings. By default, when a site supports a preferred language, but the page not exists for the preferred language, the plugin attempts to match the alternate language set by the user.</p><p>If you don&#39;t need to fall back to the user&#39;s alternate language, but directly match the user&#39;s preferred language, set <code>localeFallback: false</code> in the plugin options.</p></div><div class="hint-container info"><p class="hint-container-title">Customizing missing behavior</p><p>Sometimes, when a user visits a page, the document does not yet contain the language version the user needs (a common case is that the current page has not been localized in the relevant language), so the plugin needs to perform a default action, which you can customize by <code>defaultBehavior</code> in the plugin options:</p><ul><li><code>&quot;defaultLocale&quot;</code>: Redirect to default language or first available language page (default behavior)</li><li><code>&quot;homepage&quot;</code>: redirect to the home page in the current language (only available if the document contains the user&#39;s language)</li><li><code>&quot;404&quot;</code>: Redirect to page 404 in current language (only available if the document contains the user&#39;s language)</li></ul></div><div class="hint-container info"><p class="hint-container-title">Customizing default locale path</p><p>You can customize the default locale path by setting <code>defaultLocale</code> in the plugin options. By default, the plugin uses the first locale key in <code>locales</code> as the default language.</p></div><h3 id="automatically-switch-languages" tabindex="-1"><a class="header-anchor" href="#automatically-switch-languages" aria-hidden="true">#</a> Automatically switch languages</h3><p>The plugin supports automatically switching the link to the multilingual page that the user needs according to the user&#39;s language preference when opening a multilingual document. In order to achieve this, you need to set <code>switchLocale</code> in the plugin options, which can be the following two values:</p><ul><li><code>direct</code>: switch directly to the user language preference page without asking</li><li><code>modal</code>: When the user&#39;s language preference is different from the current page language, show a modal asking whether to switch language</li></ul><h3 id="customizing-locale-settings" tabindex="-1"><a class="header-anchor" href="#customizing-locale-settings" aria-hidden="true">#</a> Customizing Locale Settings</h3><p>By default, the plugin generates a locale setting by reading <code>locale path</code> and <code>lang</code> from the site&#39;s <code>locales</code> option. Sometimes, you may want multiple languages to hit the same path, in which case you should set <code>localeConfig</code> in plugin options.</p><p>For example, you might want all English users to match to <code>/en/</code> and Chinese Traditional users to <code>/zh/</code>, then you can set:</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">localeConfig</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;/en/&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;en-US&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;en-UK&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;en&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;/zh/&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;zh-CN&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;zh-TW&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;zh&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="redirecting-sites" tabindex="-1"><a class="header-anchor" href="#redirecting-sites" aria-hidden="true">#</a> Redirecting Sites</h2><p>Sometimes you may change <code>base</code> or use new domain for your site, so you may want the original site automatically redirects to the new one.</p><p>To solve this, the plugin provide <code>vp-redirect</code> cli.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Usage:
  $ vp-redirect generate <span class="token punctuation">[</span>sourceDir<span class="token punctuation">]</span>

Options:
  <span class="token parameter variable">--hostname</span> <span class="token operator">&lt;</span>hostname<span class="token operator">&gt;</span>  Hostname to redirect to <span class="token punctuation">(</span>E.g.: https://new.example.com/<span class="token punctuation">)</span> <span class="token punctuation">(</span>default: /<span class="token punctuation">)</span>
  -c, <span class="token parameter variable">--config</span> <span class="token operator">&lt;</span>config<span class="token operator">&gt;</span>  Set path to config <span class="token function">file</span>
  -o, <span class="token parameter variable">--output</span> <span class="token operator">&lt;</span>output<span class="token operator">&gt;</span>  Set the output directory <span class="token punctuation">(</span>default: .vuepress/redirect<span class="token punctuation">)</span>
  <span class="token parameter variable">--cache</span> <span class="token operator">&lt;</span>cache<span class="token operator">&gt;</span>        Set the directory of the cache files
  -t, <span class="token parameter variable">--temp</span> <span class="token operator">&lt;</span>temp<span class="token operator">&gt;</span>      Set the directory of the temporary files
  --clean-cache          Clean the cache files before generation
  --clean-temp           Clean the temporary files before generation
  -h, <span class="token parameter variable">--help</span>             Display this message
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You need to pass in VuePress project source dir and also set the <code>hostname</code> option. The redirect helper cli will initialize your VuePress project to get pages, then generate and output the redirect html files to the output directory.</p><p>By default, the plugin will output to <code>.vuepress/redirect</code> directory under source directory. And you should upload it to your original site to provide redirection.</p>`,37),p=[o];function c(i,l){return e(),a("div",null,p)}const d=n(t,[["render",c],["__file","guide.html.vue"]]);export{d as default};
