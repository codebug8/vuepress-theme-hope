import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as r,c as d,d as s,w as t,a as n,b as e,e as m}from"./app-2a2308c1.js";const h={},k=n("h2",{id:"setting-options",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#setting-options","aria-hidden":"true"},"#"),e(" Setting Options")],-1),g=n("p",null,"You can both set options with plugin options on Node side and set options in client config file on Browser side.",-1),b=n("div",{class:"language-typescript line-numbers-mode","data-ext":"ts"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"import"),e(),n("span",{class:"token punctuation"},"{"),e(" commentPlugin "),n("span",{class:"token punctuation"},"}"),e(),n("span",{class:"token keyword"},"from"),e(),n("span",{class:"token string"},'"vuepress-plugin-comment2"'),n("span",{class:"token punctuation"},";"),e(`

`),n("span",{class:"token comment"},"// .vuepress/config.ts"),e(`
`),n("span",{class:"token keyword"},"export"),e(),n("span",{class:"token keyword"},"default"),e(),n("span",{class:"token punctuation"},"{"),e(`
  plugins`),n("span",{class:"token operator"},":"),e(),n("span",{class:"token punctuation"},"["),e(`
    `),n("span",{class:"token function"},"commentPlugin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),e(`
      provider`),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"Artalk"'),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token comment"},"// Artalk | Giscus | Waline | Twikoo"),e(`

      `),n("span",{class:"token comment"},"// other options here"),e(`
      `),n("span",{class:"token comment"},"// ..."),e(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),e(`
  `),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),e(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),v=n("div",{class:"language-typescript line-numbers-mode","data-ext":"ts"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token comment"},"// .vuepress/client.ts"),e(`
`),n("span",{class:"token keyword"},"import"),e(),n("span",{class:"token punctuation"},"{"),e(" defineClientConfig "),n("span",{class:"token punctuation"},"}"),e(),n("span",{class:"token keyword"},"from"),e(),n("span",{class:"token string"},'"@vuepress/client"'),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token keyword"},"import"),e(),n("span",{class:"token punctuation"},"{"),e(`
  defineArtalkOptions`),n("span",{class:"token punctuation"},","),e(`
  `),n("span",{class:"token comment"},"// defineGiscusOptions,"),e(`
  `),n("span",{class:"token comment"},"// defineTwikooOptions,"),e(`
  `),n("span",{class:"token comment"},"// defineWalineOptions,"),e(`
`),n("span",{class:"token punctuation"},"}"),e(),n("span",{class:"token keyword"},"from"),e(),n("span",{class:"token string"},'"@vuepress/plugin-comment2"'),n("span",{class:"token punctuation"},";"),e(`

`),n("span",{class:"token function"},"defineArtalkOptions"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),e(`
  `),n("span",{class:"token comment"},"// options"),e(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`

`),n("span",{class:"token keyword"},"export"),e(),n("span",{class:"token keyword"},"default"),e(),n("span",{class:"token function"},"defineClientConfig"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),e(`
  `),n("span",{class:"token comment"},"// ..."),e(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),f=n("p",null,"But there are some limitations you should remember:",-1),_=n("p",null,[n("code",null,"provider"),e(", locales and other resource related option must be set in plugin options.")],-1),y=n("p",null,"To ensure tree-shaking works, we must optimize entries at node so that bundler can understand which resource should be included in the final bundle.",-1),w=n("p",null,"Options which can not be serialized to JSON must be set in client config.",-1),C=n("p",null,"Options that receive complicated values (e.g.: Function) can not be set in plugin options, as plugins are running under Node.js environment, so we can not pass these values and their contexts to browser.",-1),x=n("h2",{id:"adding-comment",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#adding-comment","aria-hidden":"true"},"#"),e(" Adding Comment")],-1),O=n("p",null,[e("This plugin globally registers a component "),n("code",null,"<CommentService />"),e(".")],-1),T=n("code",null,"alias",-1),A=n("code",null,"<CommentService />",-1),G=n("code",null,"<PageNav />",-1),W=n("li",null,"If you are a theme developer, you should insert this component in the layout of your theme.",-1),B=m('<h2 id="comment-status" tabindex="-1"><a class="header-anchor" href="#comment-status" aria-hidden="true">#</a> Comment Status</h2><p>By default, <code>&lt;CommentService /&gt;</code> component is enabled globally, and you can use <code>comment</code> option in both plugin options and page frontmatter to control it.</p><ul><li><p>You can disable it locally by setting <code>comment: false</code> in page frontmatter.</p></li><li><p>To keep it globally disabled, please set <code>comment</code> to <code>false</code> in the plugin options. Then you can set <code>comment: true</code> in page frontmatter to enable it locally.</p></li></ul><h2 id="comment-id" tabindex="-1"><a class="header-anchor" href="#comment-id" aria-hidden="true">#</a> Comment ID</h2><p>You can set <code>commentID</code> option in page frontmatter to customize comment ID, which is used to identify comment storage item to use for a page.</p><p>By default it will be the <code>path</code> of the page, which means if you are deploying the site to multiple places, page with same content across sites will share the same comment data.</p><h2 id="comment-services" tabindex="-1"><a class="header-anchor" href="#comment-services" aria-hidden="true">#</a> Comment Services</h2><p>Currently, you can choose from Giscus, Waline, Twikoo and Artalk.</p><div class="hint-container tip"><p class="hint-container-title">Choosing from comment services</p><p>People who your blog or documentation are targeting:</p><ul><li>Programmers and developers: Giscus</li><li>General public: Waline</li></ul></div>',9);function N(P,S){const u=l("Tabs"),c=l("Badge"),o=l("RouterLink");return r(),d("div",null,[k,g,s(u,{id:"6",data:[{id:"With Plugin Options"},{id:"With Client Config File"}]},{title0:t(({value:a,isActive:i})=>[e("With Plugin Options")]),title1:t(({value:a,isActive:i})=>[e("With Client Config File")]),tab0:t(({value:a,isActive:i})=>[b]),tab1:t(({value:a,isActive:i})=>[v]),_:1}),f,n("ul",null,[n("li",null,[_,y,n("p",null,[e("These options will be marked with "),s(c,{text:"Plugin Option Only",type:"warning"}),e(" in config reference.")])]),n("li",null,[w,C,n("p",null,[e("These options will be marked with "),s(c,{text:"Client Config Only",type:"warning"}),e(" in config reference.")])])]),x,O,n("ul",null,[n("li",null,[e("If you are a user, you should use "),T,e(" and layout slots to insert the component. We recommended you to insert the comment component ("),A,e(") after the "),G,e(" component, and "),s(o,{to:"/demo.html"},{default:t(()=>[e("here is a demo")]),_:1}),e(" with default theme.")]),W]),B,n("ul",null,[n("li",null,[n("p",null,[s(o,{to:"/guide/giscus.html"},{default:t(()=>[e("Giscus Guide")]),_:1})])]),n("li",null,[n("p",null,[s(o,{to:"/guide/waline.html"},{default:t(()=>[e("Waline Guide")]),_:1})])]),n("li",null,[n("p",null,[s(o,{to:"/guide/twikoo.html"},{default:t(()=>[e("Twikoo Guide")]),_:1})])]),n("li",null,[n("p",null,[s(o,{to:"/guide/artalk.html"},{default:t(()=>[e("Artalk Guide")]),_:1})])])])])}const z=p(h,[["render",N],["__file","index.html.vue"]]);export{z as default};
