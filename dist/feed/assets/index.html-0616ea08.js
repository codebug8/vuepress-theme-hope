import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as r,c as d,a as e,b as a,d as o,w as n,e as s}from"./app-aaaf634d.js";const c={},p=s(`<h2 id="hostname" tabindex="-1"><a class="header-anchor" href="#hostname" aria-hidden="true">#</a> hostname</h2><ul><li>Type: <code>string</code></li><li>Required: Yes</li></ul><p>The domain name of the deployment site.</p><h2 id="atom" tabindex="-1"><a class="header-anchor" href="#atom" aria-hidden="true">#</a> atom</h2><ul><li>Type: <code>boolean</code></li><li>Default: <code>false</code></li></ul><p>Whether to output Atom syntax files.</p><h2 id="json" tabindex="-1"><a class="header-anchor" href="#json" aria-hidden="true">#</a> json</h2><ul><li>Type: <code>boolean</code></li><li>Default: <code>false</code></li></ul><p>Whether output JSON syntax files.</p><h2 id="rss" tabindex="-1"><a class="header-anchor" href="#rss" aria-hidden="true">#</a> rss</h2><ul><li>Type: <code>boolean</code></li><li>Default: <code>false</code></li></ul><p>Whether to output RSS syntax files.</p><h2 id="image" tabindex="-1"><a class="header-anchor" href="#image" aria-hidden="true">#</a> image</h2><ul><li>Type: <code>string</code></li></ul><p>A large image/icon of the feed, probably used as banner.</p><h2 id="icon" tabindex="-1"><a class="header-anchor" href="#icon" aria-hidden="true">#</a> icon</h2><ul><li>Type: <code>string</code></li></ul><p>A small icon of the feed, probably used as favicon.</p><h2 id="count" tabindex="-1"><a class="header-anchor" href="#count" aria-hidden="true">#</a> count</h2><ul><li>Type: <code>number</code></li><li>Default: <code>100</code></li></ul><p>Set the maximum number of items in the feed. After all pages are sorted, the first <code>count</code> items will be intercepted.</p><p>If your site has a lot of articles, you may consider this option to reduce feed file size.</p><h2 id="preservedelements" tabindex="-1"><a class="header-anchor" href="#preservedelements" aria-hidden="true">#</a> preservedElements</h2><ul><li>Type: <code>(RegExp | string)[] | (tagName: string) =&gt; boolean</code></li><li>Default: <code>[]</code></li></ul><p>Custom element or component which should be preserved in feed.</p><div class="hint-container note"><p class="hint-container-title">Note</p><p>By default, all unknown tags will be removed.</p></div><h2 id="filter" tabindex="-1"><a class="header-anchor" href="#filter" aria-hidden="true">#</a> filter</h2><ul><li><p>Type: <code>(page: Page)=&gt; boolean</code></p></li><li><p>Default:</p><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token punctuation">(</span><span class="token punctuation">{</span> frontmatter<span class="token punctuation">,</span> filePathRelative <span class="token punctuation">}</span><span class="token operator">:</span> Page<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">=&gt;</span>
  <span class="token operator">!</span><span class="token punctuation">(</span>
    frontmatter<span class="token punctuation">.</span>home <span class="token operator">||</span>
    <span class="token operator">!</span>filePathRelative <span class="token operator">||</span>
    frontmatter<span class="token punctuation">.</span>article <span class="token operator">===</span> <span class="token boolean">false</span> <span class="token operator">||</span>
    frontmatter<span class="token punctuation">.</span>feed <span class="token operator">===</span> <span class="token boolean">false</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div></li></ul><p>A custom filter function, used to filter feed items.</p><h2 id="sort" tabindex="-1"><a class="header-anchor" href="#sort" aria-hidden="true">#</a> sort</h2><ul><li>Type: <code>(pageA: Page, pageB: Page)=&gt; number</code></li></ul><p>A custom sort function, used to sort feed items.</p><div class="hint-container warning"><p class="hint-container-title">Note</p><p>We strongly recommend you setting this option, otherwise the order of items in the feed stream is completely determined by the order of pages output by VuePress.</p><p>You can sort the pages in the site according to your needs.</p></div><h2 id="channel" tabindex="-1"><a class="header-anchor" href="#channel" aria-hidden="true">#</a> channel</h2><p><code>channel</code> option is used to config <em>Feed Channels</em>.</p>`,35),u=s('<h2 id="atomoutputfilename" tabindex="-1"><a class="header-anchor" href="#atomoutputfilename" aria-hidden="true">#</a> atomOutputFilename</h2><ul><li>Type: <code>string</code></li><li>Default: <code>&quot;atom.xml&quot;</code></li></ul><p>Atom syntax output filename, relative to dest folder.</p><h2 id="atomxsltemplate" tabindex="-1"><a class="header-anchor" href="#atomxsltemplate" aria-hidden="true">#</a> atomXslTemplate</h2><ul><li>Type: <code>string</code></li><li>Default: <code>&quot;vuepress-plugin-feed2/templates/atom.xsl&quot;</code></li></ul><p>Atom xsl template file path</p><h2 id="atomxslfilename" tabindex="-1"><a class="header-anchor" href="#atomxslfilename" aria-hidden="true">#</a> atomXslFilename</h2><ul><li>Type: <code>string</code></li><li>Default: <code>&quot;atom.xsl&quot;</code></li></ul><p>Atom xsl filename, relative to dest folder.</p><h2 id="jsonoutputfilename" tabindex="-1"><a class="header-anchor" href="#jsonoutputfilename" aria-hidden="true">#</a> jsonOutputFilename</h2><ul><li>Type: <code>string</code></li><li>Default: <code>&quot;feed.json&quot;</code></li></ul><p>JSON syntax output filename, relative to dest folder.</p><h2 id="rssoutputfilename" tabindex="-1"><a class="header-anchor" href="#rssoutputfilename" aria-hidden="true">#</a> rssOutputFilename</h2><ul><li>Type: <code>string</code></li><li>Default: <code>&quot;rss.xml&quot;</code></li></ul><p>RSS syntax output filename, relative to dest folder.</p><h2 id="rssxsltemplate" tabindex="-1"><a class="header-anchor" href="#rssxsltemplate" aria-hidden="true">#</a> rssXslTemplate</h2><ul><li>Type: <code>string</code></li><li>Default: <code>&#39;vuepress-plugin-feed2/templates/rss.xsl&#39;</code></li></ul><p>RSS xsl template file path</p><h2 id="rssxslfilename" tabindex="-1"><a class="header-anchor" href="#rssxslfilename" aria-hidden="true">#</a> rssXslFilename</h2><ul><li>Type: <code>string</code></li><li>Default: <code>&quot;rss.xsl&quot;</code></li></ul><p>RSS syntax xsl filename, relative to dest folder.</p><h2 id="getter" tabindex="-1"><a class="header-anchor" href="#getter" aria-hidden="true">#</a> getter</h2><p>Feed generation controller.</p><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>The plugin is providing a reasonable getter by default, if you want full control of feed generating, you can set this field.</p></div>',24),h=e("h2",{id:"locales",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#locales","aria-hidden":"true"},"#"),a(" locales")],-1),f=e("ul",null,[e("li",null,[a("Type: "),e("code",null,"Record<string, BaseFeedOptions>")]),e("li",null,"Required: No")],-1),m=e("p",null,"You can use it to specific options for each locale.",-1),g=e("p",null,[a("Any options above are supported except "),e("code",null,"hostname"),a(".")],-1);function x(b,y){const t=i("RouterLink");return r(),d("div",null,[p,e("p",null,[a("For available options, please see "),o(t,{to:"/config/channel.html"},{default:n(()=>[a("Config â†’ Channel")]),_:1})]),u,e("p",null,[a("For details, see "),o(t,{to:"/config/getter.html"},{default:n(()=>[a("Feed Getter")]),_:1}),a(".")]),h,f,m,g])}const _=l(c,[["render",x],["__file","index.html.vue"]]);export{_ as default};
